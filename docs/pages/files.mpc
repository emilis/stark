--- requirements ---------------------------------------------------------------

defTable:           ../lib/stark/def-table

--- yaml -----------------------------------------------------------------------

id:                 files
title:              Files and Directories

--- jade -----------------------------------------------------------------------

p Now lets look through the contents of your site directory:

!= defTable({ prefix: id, content: fileTable })

--- fileTable ---

build   |   build/      |   Output directory.           |   Stark will create it if it is missing.
index   |   index.mpc   |   Home page. Starting point.  |   Required.
config  |   config.mpc  |   Site-wide configuration.    |   Optional.
lib     |   lib/        |   Components directory.       |   Optional.
pages   |   pages/      |   Pages directory.            |   Optional.
static  |   static/     |   Static files directory.     |   Optional.

--- jade ---

h3( id= id+ "-build" ) build/

p You will find the compiled pages, scripts, styles and other files here. Directory contents should look like this:

!= defTable({ prefix: id, content: buildFiles })

--- buildFiles ---

| index.html            |   Home page created from index.mpc
| style.css             |   CSS style built from requirements of index.mpc
| script.js             |   JavaScript modules build from requirements of index.mpc
| static/               |   Files copied over from static/
| somepage/ index.html  |   Page created from pages/somepage.mpc

--- jade ---

h3( id= id+ "-index" ) index.mpc

p This is the main page of the site and the starting point for CSS and JavaScript generation:

ul
    li Stark creates <tt>build/index.html</tt> from jst/html/markdown part of this page.
    
    li Stark creates <tt>build/script.js</tt> and <tt>build/style.css</tt> from the requirements of this page.


h3( id= id+ "-config" ) config.mpc

p The data from the <tt>yaml</tt> part of this file will be available as <code>site.config</code> value in <tt>jst</tt> templates.

p: em Alternatively you can rename the file to <tt>config.yaml</tt>. (Don't forget to remove the MPC part headers).


h3( id= id+ "-pages" ) pages/

p Directory for your page components.
    tt  pages/yourpage.mpc
    |   will be used to generate
    tt  build/yourpage/index.html
    |   .


h3( id= id+ "-static" ) static/

p The contents of this directory are recursively copied to <tt>build/static</tt>.


h3( id= id+ "-lib" ) lib/

p This is the directory for templates, widgets, JS modules, third party libraries. You should probably put source files into subdirectories and not to the <tt>lib/</tt> itself, e.g.:

ul
    li: tt lib/jquery/jquery.js
    li: tt lib/yourproject/layout.mpc
    li: tt lib/yourname/widely-reused-library.mpc

